DESIRED functions
  accumulate
  bin
  binBy
  binaryBySel
  boobs
  breakWith
  byDefer
  byDelay
  byNot
  byOnce
  bySel
  bySelArg
  byThrottle
  comparePredicate
  compareSel
  difference
  differenceAll
  differences
  dropWhile
  dropr
  elemIndex
  elemIndices
  exclude
  extend
  fifth
  find
  findIndex
  findIndices
  foldr
  foldr1
  forth
  fst
  gather
  gatherBy
  group
  groupBy
  hasKey
  inits
  ins
  insBy
  intercalate
  intersect
  intersectBy
  intersection
  intersectionAll
  invoke
  isPrefixOf
  isProperSubset
  isProperSuperset
  isSubset
  isSuffixOf
  isSuperset
  mapAt
  maximum
  maximumBy
  median
  medianBy
  minimum
  minimumBy
  nest
  nestList
  padLeft
  padRight
  partition
  randelement
  randfloat
  randseed
  remove
  removeBy
  repeatEvery
  rest
  riffle
  rotateLeft
  rotateRight
  runs
  runsBy
  scanl
  scanl1
  scanr
  scanr1
  setize
  seventh
  sixth
  snd
  sortWith
  spanWith
  splitAt
  symmetricDifference
  symmetricDifferenceAll
  table
  tails
  takeWhile
  taker
  tally
  tallyBy
  thrd
  total
  union
  unionAll
  unstableSort
  unstableSortBy
  unstableSortWith
  unzip
  unzipWith
  without
  zip
  zipWith

UNSTABLE functions
  any
  byKey
  chunk
  commonest
  commonestBy
  compareAddress
  compareBoth
  compareDefault
  compareReverse
  compareSelector
  compareThrough
  curry
  enumerate
  equals
  inner
  outer
  pluck
  sample
  shuffle
  sort
  sortBy
  uncurry
  uniquedBy

STABLE functions
  all
  any
  applyIf
  byBinarySel
  byCompose
  byConst
  byFlip
  byFunction
  byIdentity
  compact
  concat
  concatMap
  contains
  count
  drop
  falsy
  filter
  first
  flatten
  foldl
  foldl1
  initial
  intersperse
  isKind
  iter
  last
  map
  objectAt
  performSel
  randint
  reap
  replicate
  responds
  reverse
  split
  tail
  take
  transpose
  truthy
  uniqued
  until

